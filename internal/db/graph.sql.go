// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: graph.sql

package db

import (
	"context"
)

const getGraph = `-- name: GetGraph :many
SELECT
    id,
    title
FROM
    chat
ORDER BY
    updated_at DESC
`

type GetGraphRow struct {
	ID    string
	Title string
}

func (q *Queries) GetGraph(ctx context.Context) ([]GetGraphRow, error) {
	rows, err := q.db.QueryContext(ctx, getGraph)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetGraphRow
	for rows.Next() {
		var i GetGraphRow
		if err := rows.Scan(&i.ID, &i.Title); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
